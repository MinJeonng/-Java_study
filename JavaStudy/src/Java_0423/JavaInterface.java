package Java_0423;

public interface JavaInterface {
	int LEVEL = 1; // public static final int LEVEL=1;

	void up();

	void right();

	void left();

	void down();

	// 디폴트 메소드
	// 필요에 따라서 오버라이드 할 수 있다. 오버라이드 하지않는 경우 인처페이스에서 구현한 정의를 사용/
	// 즉 diablo말고 다른클래스에서 spacebar를 다르게 정의하고 diablo에서는 아무것도 쓰지 않으면 디폴트 메시지가 나오고 다른
	// 클래스는 따로 정의한 값이 나오는것
	default void spacebar() {
		System.out.println("점프하기 ");
	}

	// static메소
	// 클래스에 인스턴스와 무관하게 직접 호출하여 사용
	// 인터페이스에 대한 유틸리티 함수나 헬퍼함수를 제공하는데 사용된다.
	static void print() {
		System.out.println("게임 정보 입니다. ");
	}
}

/*
 * 추상 클래스와 인터페이스의 차이점
 * 
 * 1. 상속 추상클래스 : 한 클래스는 하나의 추상클래스만 상속 인터페이스 : 한 클래스는 여러 인터페이스를 구현가능 (다중상속)
 * 
 * 2.멤버변수 추상클래스 : 멤버변수를 가질 수 있다. 인터페이스 : 상수만 포함가능
 * 
 * 3. 사용 추상클래스 : 상속관계에서 공통의 기능이나 상태를 유지할때 사용 인터페이스 : 여러 클래스에서 공통으로 필요한 기능을 정의할떄
 * 사용
 * 
 * 4. 생성자 추상클래스 : 생성자와 초기화 가능 인터페이스 : 생성자와 초기화 불가
 * 
 * 5. 구성요소 추상클래스 : 추상메소드, 일반메소드, 생성자, 멤버변수 인터페이스 :추상메소드, 상수, java8이상부터 디폴트 메소드,
 * static메소
 * 
 * 
 * 공통점 하위클래스에서 특정한 행동을 강제하기 위해서 사용
 */
